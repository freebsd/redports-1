#!/bin/sh

# RedPorts poudriere backend helper
#
# $Id$
#

POUDRIERE=/poudriere
ZFSROOT=zroot

poudriere_checkout()
{
    TYPE=$1
    REPOSITORY=$2
    REVISION=$3
    BUILD=$4

    echo "do checkout for ${BUILD}"
  
    return 0
}

poudriere_build()
{
    PORT=$1
    BUILD=$2
    PRIORITY=$3
    FINISHURL=$4

    echo "do build for ${BUILD}"

    return 0
}

poudriere_status()
{
    BUILD=$1

    echo "give status for ${BUILD}"

    return 0
}

poudriere_clean()
{
    BUILD=$1

    set -- `poudriere status -H -j ${BUILD} -p ${BUILD} -z 0 -l -f`

    zset=${1}
    tree=${2}
    jail=${3}
    build=${4}
    status=${5}
    queue=${6}
    built=${7}
    fail=${8}
    skip=${9}
    ignore=${10}
    remain=${11}
    time=${12}
    logs=${13}

    return 0
}

poudriere_update()
{
    BUILD=$1

    PORTSTREE=${POUDRIERE}/ports/${BUILD}

    if [ ! -d "${PORTSTREE}" ]; then
        echo "Unknown portstree for build ${BUILD}"
        return 1
    fi

    zfs rollback ${ZFSROOT}${PORTSTREE}@clean

    if svn update -q ${PORTSTREE}
    then
	zfs snapshot ${ZFSROOT}${PORTSTREE}@clean2
	zfs destroy ${ZFSROOT}${PORTSTREE}@clean
	zfs rename ${ZFSROOT}${PORTSTREE}@clean2 ${ZFSROOT}${PORTSTREE}@clean
    else
	zfs rollback ${ZFSROOT}${PORTSTREE}@clean
	echo "svn update failed for ${PORTSTREE}"
	return 1
    fi

    return 0
}

poudriere_recover()
{
    BUILD=$1

    PORTSTREE=${POUDRIERE}/ports/${BUILD}

    zfs rollback ${ZFSROOT}${PORTSTREE}@clean

    return 0
}

poudriere_selftest()
{
    BUILD=$1

    if [ ! -d "${POUDRIERE}/jails/${BUILD}" ]; then
        echo "Unknown build ${BUILD}"
        return 1
    fi

    if [ -z "${POUDRIERE}/ports/${BUILD}" ]; then
        echo "Unknown portstree for build ${BUILD}"
        return 1
    fi

    return 0
}


