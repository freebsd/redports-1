= !HowTo Setup a Redports Frontend =

A Redports Frontend runs the web interface for the user and is also the master that coordinates the communication to the backend nodes. All of those services can be separated in his own jail which is recommended for improved security.


== Web Interface ==

=== Requirements ===

From https://svn.redports.org/redports/:

  * www/trac
  * www/trac-accountmanager

From the FreeBSD portstree:

  * www/nginx
  * mail/exim
  * devel/subversion
  * databases/postgresql93-client

=== Trac ===

`/etc/crontab`
{{{
# update svn mirror
*       *       *       *       *       root	su -m www -c "/usr/local/bin/svnsync --non-interactive --trust-server-cert sync file:///var/db/trac/redports/repository/redports >>/var/log/svnsync.log"
# regular session cleanup
5	3	*	*	*	root	/usr/local/bin/trac-admin /var/db/trac/redports session purge "2 days ago"
}}}

For 


== Dispatcher ==

=== Requirements ===

  * databases/postgresql93-server
  * databases/postgresql93-client
  * ftp/curl

=== rc.conf ===

{{{
# redports platform
postgresql_enable="YES"
rpdd_enable="YES"
}}}

=== PostgreSQL Database ===

If you are in a jail you need to ensure that `allow.sysvipc` is set.

{{{
/usr/local/etc/rc.d/postgresql initdb
/usr/local/etc/rc.d/postgresql start
su pgsql
createuser trac
createuser dispatcher
createdb trac -O trac
}}}


=== Redports Dispatcher ===

You need to compile and install the latest rpdd.

{{{
svn co http://redports.googlecode.com/svn/trunk/rpdd
cd rpdd
make install clean
}}}

Create a rpdd.conf according to your needs.

{{{
cp -p /usr/local/etc/rpdd.conf-dist /usr/local/etc/rpdd.conf
vi /usr/local/etc/rpdd.conf
}}}



== Subversion repository ==


=== Requirements ===

  * devel/subversion (with MOD_DAV_SVN)
  * www/apache22

=== rc.conf ===

{{{
apache22_enable="YES"
}}}

=== Apache ===

Enabled options in the port www/apache22:

{{{
     AUTH_BASIC=on: mod_auth_basic
     AUTH_DIGEST=on: mod_auth_digest
     AUTHN_FILE=on: mod_authn_file
     AUTHZ_HOST=on: mod_authz_host
     DAV=on: mod_dav
     INCLUDE=on: mod_include
     LOG_CONFIG=on: mod_log_config
     LOGIO=on: mod_logio
     SETENVIF=on: mod_setenvif
     SSL=on: mod_ssl
}}}

`/usr/local/etc/apache22/svnaccess`
{{{
#[groups]
#team-test = user1,user2
 
[/]
* = r
 
# teams
#[/test]
#@team-test = rw
 
# users
#[/user1]
#user1 = rw
}}}

`/usr/local/etc/apache22/Includes/svn.redports.org` (only the relevant parts)
{{{
    # WebDAV for SVN
    <Location />
        DAV svn
        SVNPath /var/subversion/redports
        SVNReposName svn.redports.org

        AuthzSVNAccessFile /usr/local/etc/apache22/svnaccess

        # only authenticated users may access the repository
        Order allow,deny
        Allow from all
        Satisfy any
        Require valid-user

        # how to authenticated a user
        AuthType  Digest
        AuthName  "redports.org"
        AuthUserFile /usr/local/etc/redports/htdigest
        AuthDigestProvider file
    </Location>
}}}

Install some management scripts to create users.

{{{
svn checkout https://redports.googlecode.com/svn/trunk/scripts
cd scripts
make install-frontend
}}}

== Proxy ===

A proxy is recommended for fetching distfiles because it allows to isolate the backends completely from the internet. www/squid33 has been tested and works flawless.

All you need to do is add your private IP range to the squid.conf to allow your backends to use the proxy.

*squid.conf*
{{{
# address range of the backends
# not required for fd97 since it is a subnet of fc00::/7
acl localnet src fd97:add1:ffff:aaaa::/64

# only listen on the required IP
http_port [fd97:add1:ffff:aaaa::a1]:3128
}}}